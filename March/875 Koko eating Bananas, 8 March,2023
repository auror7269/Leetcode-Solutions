class Solution {
public:
    int minEatingSpeed(vector<int>& piles, int h) {
        int low=1;
        int high=*max_element(piles.begin(),piles.end());
        while(low<=high){
            long long int count =0;
            int mid=low+(high-low)/2;
            for(int i=0;i<piles.size();i++){
                if(piles[i]<mid) count++;
                else count+=((piles[i]/mid)+(piles[i]%mid!=0));
            }
            if(count>h) low=mid+1;
            else high=mid-1;
        }
        return low;
    }
};