/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
   ListNode* cycle(ListNode* head){
       if(head==NULL) return NULL;
       ListNode* slow=head;
       ListNode* fast=head;
       while(slow!=NULL && fast!=NULL){
           fast=fast->next;
           if(fast!=NULL) fast=fast->next;
           slow=slow->next;
           if(slow==fast) return slow;;
       }
       return NULL;
   }
   
    ListNode *detectCycle(ListNode *head) {
         ListNode* curr = cycle(head);
         ListNode* slow = head;
         if(curr==NULL){
             return NULL;
         }
         while(slow!=curr){
             slow=slow->next;
             curr=curr->next;
         }
         return slow;

    }
};